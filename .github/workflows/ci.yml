name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  DFX_VERSION: '0.15.0'

jobs:
  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run linting
      run: |
        cd frontend
        npm run lint
        
    - name: Run unit tests
      run: |
        cd frontend
        npm test -- --run --coverage
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./frontend/coverage
        flags: frontend
        
  test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install DFX
      run: |
        curl -fsSL https://internetcomputer.org/install.sh | sh
        echo "$HOME/.local/share/dfx/bin" >> $GITHUB_PATH
        
    - name: Setup Node.js (for frontend build)
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Start local replica
      run: |
        dfx start --background --clean
        
    - name: Deploy canisters
      run: |
        dfx deploy
        
    - name: Run backend tests
      run: |
        dfx canister call w3live_backend runTests
        
    - name: Test health endpoint
      run: |
        dfx canister call w3live_backend health
        
    - name: Stop replica
      run: |
        dfx stop
        
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install DFX
      run: |
        curl -fsSL https://internetcomputer.org/install.sh | sh
        echo "$HOME/.local/share/dfx/bin" >> $GITHUB_PATH
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        npx playwright install --with-deps
        
    - name: Start local replica
      run: |
        dfx start --background --clean
        
    - name: Deploy canisters
      run: |
        dfx deploy
        
    - name: Update environment variables
      run: |
        cd frontend
        echo "VITE_CANISTER_ID_W3LIVE_BACKEND=$(dfx canister id w3live_backend)" > .env.local
        echo "VITE_DFX_NETWORK=local" >> .env.local
        echo "VITE_PERSPECTIVE_API_KEY=test-key" >> .env.local
        
    - name: Run E2E tests
      run: |
        cd frontend
        npm run test:e2e
        
    - name: Upload E2E test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 7
        
    - name: Stop replica
      run: |
        dfx stop

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run security audit
      run: |
        cd frontend
        npm audit --audit-level=high
        
    - name: Check for vulnerabilities
      run: |
        cd frontend
        npx better-npm-audit audit --level high

  build-check:
    name: Build Verification
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install DFX
      run: |
        curl -fsSL https://internetcomputer.org/install.sh | sh
        echo "$HOME/.local/share/dfx/bin" >> $GITHUB_PATH
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Check build output
      run: |
        cd frontend
        ls -la dist/
        
    - name: Build canisters
      run: |
        dfx build
        
  deployment-ready:
    name: Deployment Readiness Check
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend, e2e-tests, security-scan, build-check]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Verify deployment readiness
      run: |
        echo "âœ… All tests passed!"
        echo "âœ… Security scan completed!"
        echo "âœ… Build verification successful!"
        echo "ðŸš€ Ready for deployment!"
        
    - name: Create deployment artifact
      run: |
        echo "Deployment ready at $(date)" > deployment-ready.txt
        
    - name: Upload deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: deployment-ready
        path: deployment-ready.txt